<#
.SYNOPSIS
Invoke-PacketCapture captures packets being transmitted over the network interface that is currently "Up", applies a capture filter to only include IP and TCP packets, captures a maximum of 1000 packets, and then displays the packets in a table showing the timestamp, protocol, source and destination addresses, and packet length. You can modify the capture filter, maximum number of packets, and other parameters to suit your needs.
#>
function Invoke-PacketCapture {

    # Checks if .NET 4.7 is installed
    Confirm-DotNet

    # Import the required .NET classes
    Add-Type -AssemblyName System.Net.NetworkInformation, System.IO

    # Set the network interface to capture packets from
    $nic = Get-NetAdapter | Where-Object { $_.Status -eq "Up" }

    # Set the maximum number of packets to capture
    $maxPackets = 1000

    # Set the capture filter
    $captureFilter = "ip and tcp"

    # Create a new Packet Capture object
    $packetCapture = [System.Net.NetworkInformation.PacketCapture]::New()

    # Start capturing packets
    $packetCapture.StartCapture($nic, $captureFilter, $maxPackets)

    # Wait for the capture to complete
    Start-Sleep -Seconds 10

    # Stop capturing packets
    $packetCapture.StopCapture()

    # Get the captured packets
    $packets = $packetCapture.GetPackets()

    # Display the packets
    $packets | Format-Table -Property TimeStamp, Protocol, SourceAddress, DestinationAddress, Length
}